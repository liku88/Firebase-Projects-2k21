{"version":3,"sources":["firebaseConfig.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChart","useState","helloMangal","setHelloMangal","lastSeenMsg","setLastSeenMsg","useEffect","Math","floor","random","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","intialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","MoreVert","SearchOutlined","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","messages","setMessages","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iaAcQA,EADcC,IAASC,cAVR,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,YACjBC,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mBAGpBb,I,QCoCFc,EA/CK,SAAC,GAA6B,IAAD,EAA3BC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAAiB,EAGNC,mBAAS,IAHH,mBAGtCC,EAHsC,KAGxBC,EAHwB,OAKRF,mBAAS,IALD,mBAKvCG,EALuC,KAK1BC,EAL0B,KASjDC,qBAAU,WACPH,EAAeI,KAAKC,MAAsB,IAAhBD,KAAKE,aAC/B,IAEHH,qBAAU,WACJR,GACCf,EAAG2B,WAAW,SAASC,IAAIb,GAAIY,WAAW,YAAYE,QAAQ,YAAa,QAAQC,YAAW,SAACC,GAAD,OAAcT,EAAeS,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,gBAE9J,CAACnB,IAYA,OAAQE,EAaJ,qBAAKkB,QAvBM,WAClB,IAAMC,EAAWC,OAAO,8BACrBD,GAEApC,EAAG2B,WAAW,SAASW,IAAI,CACvBtB,KAAOoB,KAkBmBG,UAAU,cAApC,SACA,gDAbA,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,iBAAYzB,GAArC,SACA,sBAAKwB,UAAU,cAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,oBAAf,UACA,6BAAKvB,IACL,sCAAIK,EAAY,UAAhB,aAAI,EAAgBsB,mBCzCfC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IACzBC,EADyB,EACzBA,QAASC,EADgB,EAChBA,YAAaC,EADG,EACHA,SADG,OAGzB,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAYL,EAAQC,GAAlD,SACCC,KAGQI,EAAgB,kBAAMC,qBAAWV,ICkD/BW,EAjDC,WAAO,IAAD,EAEIrC,mBAAS,IAFb,mBAEfsC,EAFe,KAERC,EAFQ,OAGKJ,IAHL,mBAGdK,EAHc,KAGdA,KAHc,KAclB,OATJnC,qBAAU,WACRvB,EAAG2B,WAAW,SAASG,YAAW,SAACC,GAAD,OAC9B0B,EAAS1B,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CACjCb,GAAIa,EAAIb,GACRmB,KAAMN,EAAIM,iBAGlB,IAGF,sBAAKK,UAAU,UAAf,UACA,sBAAKA,UAAU,iBAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAMC,WACnB,sBAAKpB,UAAU,uBAAf,UACA,cAACqB,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,YAKA,qBAAKtB,UAAU,iBAAf,SACA,sBAAKA,UAAU,2BAAf,UACA,cAACuB,EAAA,EAAD,IACA,uBAAOC,KAAK,OAAOC,YAAY,kCAI/B,sBAAKzB,UAAU,gBAAf,UACA,cAAC,EAAD,CAAatB,aAAW,IACvBuC,EAAMvB,KAAI,SAAAgC,GAAI,OACX,cAAC,EAAD,CAA2BlD,GAAIkD,EAAKlD,GAAIC,KAAMiD,EAAK/B,KAAKlB,MAAtCiD,EAAKlD,c,2DCoDZmD,EA/FF,WAAO,IAAD,MACmBhD,mBAAS,IAD5B,mBACZC,EADY,KACCC,EADD,OAEOF,mBAAS,IAFhB,mBAEZiD,EAFY,KAELC,EAFK,KAGZC,EAAUC,cAAVD,OAHY,EAKYnD,mBAAS,IALrB,mBAKbkB,EALa,KAKHmC,EALG,OAMYrD,mBAAS,IANrB,mBAMbsD,EANa,KAMHC,EANG,OAOQpB,IAPR,mBAOXK,EAPW,KAOXA,KAPW,KAanBnC,qBAAU,WACH8C,GACArE,EAAG2B,WAAW,SAASC,IAAIyC,GAAQvC,YAAW,SAAAC,GAAQ,OAClDwC,EAAYxC,EAASG,OAAOlB,SAGnChB,EAAG2B,WAAW,SAASC,IAAIyC,GAAQ1C,WAAW,YAAYE,QAAQ,YAAa,OAAOC,YAAW,SAACC,GAAD,OAAc0C,EAAY1C,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,gBACxJ,CAACmC,IAEP9C,qBAAU,WACVH,EAAeI,KAAKC,MAAsB,IAAhBD,KAAKE,aAC5B,CAAC2C,IAmBA,OACI,sBAAK9B,UAAU,OAAf,UACA,sBAAKA,UAAU,cAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,mBAAf,UACA,6BAAKH,IACL,4BAAI,IAAIsC,KAAJ,UACAF,EAASA,EAASG,OAAS,UAD3B,iBACA,EAA+BC,iBAD/B,aACA,EAA0CC,UAC5CC,mBAGF,sBAAKvC,UAAU,oBAAf,UACA,cAACqB,EAAA,EAAD,UACA,cAACE,EAAA,EAAD,MAEA,cAACF,EAAA,EAAD,UACA,cAACmB,EAAA,EAAD,MAEA,cAACnB,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,YAKA,qBAAKtB,UAAU,YAAf,SACCiC,EAASvC,KAAI,SAACU,GAAD,aACV,oBAAGJ,UAAS,uBAAkBI,EAAQ3B,OAAS0C,EAAKsB,aAAgB,iBAApE,UACA,sBAAMzC,UAAU,YAAhB,SACAI,EAAQ3B,OAER2B,EAAQA,QACR,sBAAMJ,UAAU,aAAhB,SACA,IAAImC,KAAJ,UAAS/B,EAAQiC,iBAAjB,aAAS,EAAmBC,UAAUC,wBAO1C,sBAAKvC,UAAU,cAAf,UACR,cAAC,IAAD,IACA,iCACA,uBAAOY,MAAOgB,EAAOc,SAAU,SAAAC,GAAC,OAAId,EAASc,EAAEC,OAAOhC,QAAQa,YAAY,iBAAiBD,KAAK,SAChG,wBAAQ5B,QAxDY,SAAC+C,GACpBA,EAAEE,iBACFC,QAAQC,IAAI,gBAAiBnB,GAC9BnE,EAAG2B,WAAW,SAASC,IAAIyC,GAAQ1C,WAAW,YAAYW,IAAI,CAC1DK,QAASwB,EACTnD,KAAM0C,EAAKsB,YACXJ,UAAW3E,IAASS,UAAU6E,WAAWC,oBAI5CpB,EAAS,KA8CoBL,KAAK,SAAnC,+BAEA,cAAC,IAAD,W,iCC/Fa0B,EACC,WAgBC1C,EAbC,SAAC2C,EAAOC,GAEpB,OADAN,QAAQC,IAAIK,GACLA,EAAO5B,MACV,KAAK0B,EACD,OAAO,2BACAC,GADP,IAEIhC,KAAMiC,EAAOjC,OAErB,QACA,OAAOgC,ICoBAE,EA5BD,WAAO,IAAD,EAEOvC,IAFP,yCAELwC,EAFK,KAahB,OACI,qBAAKtD,UAAU,QAAf,SACA,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,OAAOG,IAAI,sGAAsGoD,IAAI,KACpI,qBAAKvD,UAAU,aAAf,SACA,iDAEA,cAACwD,EAAA,EAAD,CAAS5D,QAhBE,WACdxB,EAAKqF,gBAAgBpF,GAAUqF,MAAK,SAAAC,GAChCL,EAAS,CACL9B,KAAK0B,EACL/B,KAAKwC,EAAOxC,UAGlByC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAMzD,aAS1B,gCCUO2D,EA/BH,WAAO,IAAD,EAEYjD,IAFZ,mBAERK,EAFQ,KAERA,KAFQ,KAIhB,OACE,qBAAKnB,UAAU,MAAf,SACCmB,EAKF,qBAAKnB,UAAU,eAAf,SACA,eAAC,IAAD,WACA,cAAC,EAAD,IACG,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOgE,KAAK,iBAAZ,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACA,cAAC,EAAD,cAbD,cAAC,EAAD,OCFUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,CAAelE,YJVU,CACvBU,KAAM,MISmCX,QAASA,EAApD,SACE,cAAC,EAAD,QAGFoE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58a9ea98.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB8D8g2y9d1V1aa-z71z7d4u9Pm6UxhlTc\",\r\n    authDomain: \"iterians-chit-chat.firebaseapp.com\",\r\n    projectId: \"iterians-chit-chat\",\r\n    storageBucket: \"iterians-chit-chat.appspot.com\",\r\n    messagingSenderId: \"597789655159\",\r\n    appId: \"1:597789655159:web:9473fcc4ac7f93a189c672\",\r\n    measurementId: \"G-XR40LL1SF1\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider};\r\n  export default db;","import React, {useState, useEffect } from 'react'\r\nimport './SidebarChat.css'\r\nimport {Avatar} from '@material-ui/core'\r\nimport db from './firebaseConfig';\r\nimport {Link, useParams} from \"react-router-dom\"\r\n\r\n\r\n\r\nconst SidebarChat = ({id, name, addNewChart}) => {\r\n   \r\n\r\n    const [helloMangal , setHelloMangal] = useState(\"\");\r\n\r\n    const[lastSeenMsg, setLastSeenMsg] = useState([]);\r\n\r\n    \r\n\r\nuseEffect(() => {\r\n   setHelloMangal(Math.floor(Math.random() * 5000));\r\n}, []);\r\n\r\nuseEffect(() => {\r\n   if(id){\r\n       db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => setLastSeenMsg(snapshot.docs.map((doc) => doc.data())))\r\n   }\r\n}, [id])\r\n\r\nconst createChat = () => {\r\n const roomName = prompt(\"Please enter name for Room\");\r\n if(roomName){\r\n    //  we will do some stuff here database work1\r\n    db.collection(\"rooms\").add({\r\n        name : roomName\r\n    })\r\n\r\n }\r\n}\r\n    return !addNewChart ?(\r\n        <Link className=\"link\" to={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${helloMangal}.svg`} />\r\n        <div className=\"sidebar-chat-info\">\r\n        <h2>{name}</h2>\r\n        <p>{lastSeenMsg[0]?.message}</p>\r\n        </div>\r\n       \r\n        \r\n        </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n        <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default SidebarChat","import React, {createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({\r\n    reducer, intialState, children\r\n}) => (\r\n    <StateContext.Provider value={useReducer (reducer,intialState)}>\r\n    {children}\r\n    </StateContext.Provider>\r\n)\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport {Avatar, IconButton} from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport {MoreVert, SearchOutlined} from '@material-ui/icons'\r\nimport SidebarChat from './SidebarChat'\r\n\r\nimport db from './firebaseConfig'\r\nimport { useStateValue } from './StateProvider'\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\nconst [rooms, setRooms] = useState([]);\r\nconst [{user}, dispatch] = useStateValue();\r\n\r\nuseEffect(() => {\r\n  db.collection('rooms').onSnapshot((snapshot) => \r\n      setRooms(snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n      })))\r\n  )\r\n},[])\r\n\r\n    return(\r\n<div className=\"sidebar\">\r\n<div className=\"sidebar-header\">\r\n<Avatar src={user?.photoURL}/>\r\n<div className=\"sidebar-header-right\">\r\n<IconButton>\r\n<DonutLargeIcon/>\r\n</IconButton>\r\n<IconButton>\r\n<ChatIcon />\r\n</IconButton>\r\n<IconButton>\r\n<MoreVert />\r\n</IconButton>\r\n</div>\r\n</div>\r\n\r\n<div className=\"sidebar-search\">\r\n<div className=\"sidebar-search-container\">\r\n<SearchOutlined />\r\n<input type=\"text\" placeholder=\"Search or start new chat\" />\r\n</div>\r\n</div>\r\n\r\n<div className=\"sidebar-chats\">\r\n<SidebarChat addNewChart />\r\n{rooms.map(room => (\r\n    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n))}\r\n\r\n</div>\r\n\r\n</div>\r\n    )\r\n}\r\nexport default Sidebar;","import { Avatar, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {AttachFile, MoreVert, SearchOutlined,} from '@material-ui/icons'\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport './Chat.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebaseConfig';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\nconst Chat = () => {\r\nconst [helloMangal, setHelloMangal] = useState(\"\");\r\nconst [input, setInput] = useState(\"\");\r\nconst {roomId} = useParams();\r\n\r\nconst[roomName, setRoomName] = useState(\"\");\r\nconst[messages, setMessages] = useState([]);\r\nconst [{user}, dispatch] = useStateValue();\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    if(roomId){\r\n       db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\r\n           setRoomName(snapshot.data().name)\r\n       )) \r\n    }\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data())))\r\n    },[roomId])\r\n\r\nuseEffect(() => {\r\nsetHelloMangal(Math.floor(Math.random() * 5000));\r\n}, [roomId])\r\n\r\n\r\n\r\n\r\n\r\nconst sendMessage = (e) => {\r\n e.preventDefault();\r\n console.log(\"You typed >>>\", input);\r\ndb.collection('rooms').doc(roomId).collection('messages').add({\r\n    message: input,\r\n    name: user.displayName,\r\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n})\r\n \r\n setInput(\"\")\r\n}\r\n\r\n    return(\r\n        <div className=\"chat\">\r\n        <div className=\"chat-header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${helloMangal}.svg`}/>\r\n        <div className=\"chat-header-info\">\r\n        <h3>{roomName}</h3>\r\n        <p>{new Date(\r\n            messages[messages.length - 1]?.timestamp?.toDate()\r\n        ).toUTCString()}</p>\r\n       \r\n        </div>\r\n        <div className=\"chat-header-right\">\r\n        <IconButton>\r\n        <SearchOutlined />\r\n        </IconButton>\r\n        <IconButton>\r\n        <AttachFile />\r\n        </IconButton>\r\n        <IconButton>\r\n        <MoreVert />\r\n        </IconButton>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"chat-body\">\r\n        {messages.map((message) => (\r\n            <p className={`chat-message ${message.name === user.displayName &&  'chat-reciever'}`}>\r\n            <span className=\"chat-name\">\r\n           {message.name}\r\n            </span>\r\n           {message.message}\r\n            <span className=\"time-stamp\">\r\n           {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n            </p>\r\n        ))}\r\n       \r\n        </div>\r\n        \r\n        <div className=\"chat-footer\">\r\n<InsertEmoticonIcon />\r\n<form>\r\n<input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"/>\r\n<button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n</form>\r\n<MicIcon />\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","export const intialState = {\r\n    user: null,\r\n};\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n\r\n}\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        default : \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth, provider } from './firebaseConfig'\r\nimport './Login.css'\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n     auth.signInWithPopup(provider).then(result => {\r\n         dispatch({\r\n             type:actionTypes.SET_USER,\r\n             user:result.user\r\n         })\r\n     }\r\n     ).catch(error => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n        <div className=\"login-container\">\r\n        <img className=\"imgg\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcShaj2SAJY5bFwrXCS8zMveQtr1u-82nqv4fA&usqp=CAU\" alt=\"\"/>\r\n        <div className=\"login-text\">\r\n        <h1>Log in To App</h1>\r\n        </div>\r\n        <Button  onClick={signIn}>\r\n        Google Login\r\n        </Button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport {BrowserRouter as Router , Switch, Route} from \"react-router-dom\"\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\nconst App = () => {\n  \n  const [{user} , dispatch] = useStateValue();\n\n  return(\n    <div className=\"App\">\n   {!user ? (\n     <Login />\n   ) : (\n\n  \n   <div className=\"appContainer\">\n   <Router>\n   <Sidebar/>\n      <Switch>\n      \n      <Route path=\"/rooms/:roomId\">\n      <Chat />\n      </Route>\n      <Route path=\"/\">\n      <Chat />\n      </Route>\n  </Switch>\n  </Router>\n\n   </div>\n   )}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { intialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider intialState = {intialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}